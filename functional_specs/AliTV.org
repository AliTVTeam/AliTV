#+AUTHOR: Markus Ankenbrand, Frank FÃ¶rster
#+TITLE: Functional specifications for the Alignment Toolbox and Visualization (AliTV)
#+DESCRIPTION: This file contains the functional specification of the AliTV
#+EMAIL: markus.ankenbrand@uni-wuerzburg.de, frank.foerster@biozentrum.uni-wuerzburg.de

#+LATEX_CLASS: scrartcl
#+LATEX_CLASS_OPTIONS: [a4paper,english]
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}

#+TODO: TODO(t!) INPG(i@/!) TEST(n@/!) TESTFAIL(f@/!) TESTPASS(p@/!) | DONE(d!) REJC(c@)


* Objectives of AliTV
  The software Alignment Toolbox and Visualization (AliTV) should be
  used to interactively generate 'publication ready' figures starting
  from biological data sets. Moreover, its capability of changing the
  figure output on the fly extends the functionality of AliTV to an
  analysis tool.
** Must-have criteria
   - Reimplementation of existing functionality including documentation and testing
     - Calculate coordinates for links (linear layout)
     - Draw links (linear layout)
     - Color karyos (linear layout)
     - Add ticks to the karyos (linear layout)
     - Color links based on identity (linear layout)
     - Fade in/out links on mouse over event (linear layout)
     - Reverse karyos and corresponding links by clicking on the karyos
   - Visualization of annotated features on the karyos, e.g. genes or
     inverted repeat regions
   - Visualization of a provided phylogenetic tree next to the alignments
   - Add text labels to the genomes, chromosomes (karyos), and features
   - Implement APIs to the AliTV class to allow remote configuration of
     - graphic parameters of AliTV objects
     - filter parameters of AliTV objects
** Nice-to-have criteria
   - Shade chromosomes belonging to a genome differently
   - Add legends for color schemes:
     - genomes
     - identity for links
     - features
   - Allow reordering of
     - chromosomes (linear layout)
     - genomes (for a given tree: branches can only be swapped, but
       free reordered within multifurcations)
   - Implement a zoom/panning feature:
     - Independent zoom for x and y axis
     - Independent zoom levels for different genomes
     - Independent panning of genomes
   - Plot tracks onto genomes, e.g. coverage or GC content
   - Extend filter API to enable the user to hide single elements
     (chromosomes, genomes) from the plot, but give a number of hidden
     elements for each genome
   - Add support for different feature classes with individual
     graphical representation
   - export of the svg
   - creation of save states for the current visualization
   - import of save states of visualization (data, configuration,
     filters)
** (Abgrenzungskriterien)
   - The bachelor thesis is restricted to the graphical representation of readily provided data (JSON, test sets exist).
   - The calculation and preparation of different data types is out of scope of the thesis.
   - In general the alignment and tree calculations are performed by external programs (some may be called by AliTV)
   - AliTV is not an alignment editor, while data may be filtered it is not supported to alter any data
* Usage
** Application field
   AliTV can be used for visualization of multiple whole genome
   alignments. The current view can be exported as (almost)
   'publication ready' SVG and all setting to restore the view can
   also be saved. Moreover its interactive features allow the
   analysis of those multiple whole genome alignments.
** Target audience
   Biologists working on sequencing data.
** System requirements
   For the graphical user interface a modern web browser is
   required. For data preparation exact specification have to be made!
* Environment
** Software
   For the GUI a javascipt enabled web browser is required. For data
   preparation exact software specification have to be made!
** Hardware
   AliTV does not require special hardware.
** (Orgware)
* Functionality
** /F0100/ Reimplementation of existing functionalty (for linear layout)
*** /F0110/ Calculate coordinates for links
    To draw linkage information from the given dataset, it is needed
    to transform chromosome specific coordinates into canvas
    coordinate system.
*** /F0120/ Filter linkage information for neighbors
    Reduce the number of linkage information between different
    chromosomes by filtering out all links but keeping the links of
    neighbored chromosomes.
*** /F0130/ Draw links
    Given the coordinates from /F0101/ and /F0102/ one can draw links between the
    chromosomes using the d3 toolkit.
*** /F0135/ Color links according to their identity
    Links should be colored by their identity value. Therefore a
    gradient should be used starting at high identity with green and
    stopping at low identity with red.
*** /F0140/ Color chromosomes
    To distinguish between different genomes, we need to color
    chromosomes according to the genome they belong to.
*** /F0145N/ Differentiate color of chromosomes
    In addition to /F0104/ we want to shade the color of different
    chromosomes belonging to the same genome. This can be achieved by
    using a gradient for a genome color.
*** /F0150/ Add ticks to chromosomes
    For a better navigation on the chromosomes we need ticks and tick
    labels indicating the position on the corresponding
    chromosome. Both should be drawn by default and need to be
    configurable via configuration.
*** /F0160/ Fade out links on mouseover event
    If the mouse pointer enters the area of a chromosome all links
    should be faded out except the links of the chromosome the mouse
    points to. This enables the user to investigate the links in more
    detail.
*** /F0165/ Fade in links on mouseout event
    If the mouse pointer leaves the area of a chromosome all links
    should be faded in again.
*** /F0170/ Reverse chromosomes and annotated links on left click
    The orientation of a chromosome can be altered by clicking onto
    that chromosome.
** /F0200/ Visualization of user provided features onto the chromosomes
   The user can provide features which should be annotated on the
   chromosomes of a genome, e.g. genes or inverted repeat
   regions. Those features should be marked on the chromosomes by
   assigning a different color. The generic style to use for feature
   annotation should be configured via configuration. Features which
   are linked to other features have to be ignored.
* Data
* User interface
* Quality targets
